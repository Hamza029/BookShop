/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bookshop;

import java.awt.print.PrinterException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USER
 */
public class SellerPanelUI extends javax.swing.JFrame {
    
    Book book;
    Book prevBook;
    Operations op = new Operations();
    DefaultTableModel model;
    String billInfo = "";
    ArrayList<Book> ara = new ArrayList<>();
    int price = 0;
    int profit = 0;

    /**
     * Creates new form SellerPanelUI
     */
    public SellerPanelUI() {
        initComponents();
        
        if(CurrentUser.getType().equals("Admin")) {
            logoutBtn.setText("Back");
//            insertBtn.setEnabled(false);
//            updateBtn.setEnabled(false);
//            removeBtn.setEnabled(false);
        }
        
        model = (DefaultTableModel) bTable.getModel();
        show_all();
    }
    
    public Book makeBook() {
        int selectedRowIndex = bTable.getSelectedRow();
        int bID = Integer.parseInt(model.getValueAt(selectedRowIndex, 0).toString());
        String bName = model.getValueAt(selectedRowIndex, 1).toString();
        String author = model.getValueAt(selectedRowIndex, 2).toString();
        String category = model.getValueAt(selectedRowIndex, 3).toString();
        int buyingPrice = Integer.parseInt(model.getValueAt(selectedRowIndex, 4).toString());
        int sellingPrice = Integer.parseInt(model.getValueAt(selectedRowIndex, 5).toString());
        int copies = Integer.parseInt(model.getValueAt(selectedRowIndex, 6).toString());
        Book tmp = new Book(bID, bName, author, category, buyingPrice, sellingPrice, copies);
        return tmp;
    }
    
    public int getSelectedRowIndex() {
        int selectedRowIndex = bTable.getSelectedRow();
        return selectedRowIndex;
    }
    
    public void show_all(String searchType, String search) {
        ArrayList<Book> list = op.showBook(searchType, search);
//        System.out.println("list size = " + list.size());
        
        Object row[] = new Object[7];
        
        model.setRowCount(0);
        
        for(int i=0; i<list.size(); i++) {
            row[0] = list.get(i).getbID();
            row[1] = list.get(i).getbName();
            row[2] = list.get(i).getAuthor();
            row[3] = list.get(i).getCategory();
            row[4] = list.get(i).getBuyingPrice();
            row[5] = list.get(i).getSellingPrice();
            row[6] = list.get(i).getCopies();
            model.addRow(row);
        }
    }
    
    public void show_all() {
        ArrayList<Book> list = op.showBook();
//        System.out.println("list size = " + list.size());
        
        Object row[] = new Object[7];
        
        model.setRowCount(0);
        
        for(int i=0; i<list.size(); i++) {
            row[0] = list.get(i).getbID();
            row[1] = list.get(i).getbName();
            row[2] = list.get(i).getAuthor();
            row[3] = list.get(i).getCategory();
            row[4] = list.get(i).getBuyingPrice();
            row[5] = list.get(i).getSellingPrice();
            row[6] = list.get(i).getCopies();
            model.addRow(row);
        }
    }
    
    public String getDate() {
        Date date = new Date();
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        String sdate = formatter.format(date);
        
//        String date = dtf.format(now);
        
//        System.out.println(s);
        return sdate;
    }
    
    public void finishSale() {
        DBCon dbc = new DBCon();
        try {
            dbc.connectToDB();
            String query = "INSERT INTO Sales (saleDate, username, saleInfo, price, profit) " + 
                "VALUES ('" + getDate() + "', '" + CurrentUser.getUsername() + "', '" + billInfo + "', " + price + ", " + profit + ")";
//            System.out.println(query);
            dbc.insertIntoDB(query);
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            dbc.disconnectFromDB();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        bTable = new javax.swing.JTable();
        logoutBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        quantityText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cNameText = new javax.swing.JTextField();
        cPhoneText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        completeBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        billText = new javax.swing.JTextPane();
        jLabel5 = new javax.swing.JLabel();
        printBtn = new javax.swing.JButton();
        searchText = new javax.swing.JTextField();
        jComboBoxSearch = new javax.swing.JComboBox<String>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book ID", "Name", "Author", "Category", "Buying Price", "Selling Price", "Copies"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(bTable);

        logoutBtn.setForeground(new java.awt.Color(255, 64, 80));
        logoutBtn.setText("Logout");
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("Bill");

        quantityText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityTextActionPerformed(evt);
            }
        });

        jLabel2.setText("Quantity");

        jLabel3.setText("Customer Name");

        cNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cNameTextActionPerformed(evt);
            }
        });

        cPhoneText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cPhoneTextActionPerformed(evt);
            }
        });

        jLabel4.setText("Customer Phone");

        completeBtn.setText("Complete");
        completeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                completeBtnActionPerformed(evt);
            }
        });

        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        billText.setEditable(false);
        jScrollPane1.setViewportView(billText);

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel5.setText("Seller Panel");

        printBtn.setText("Print");
        printBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printBtnActionPerformed(evt);
            }
        });

        searchText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextActionPerformed(evt);
            }
        });
        searchText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTextKeyReleased(evt);
            }
        });

        jComboBoxSearch.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Book ID", "Name", "Author", "Category" }));
        jComboBoxSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 621, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(quantityText, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cPhoneText))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(logoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(completeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(71, 71, 71)
                        .addComponent(jComboBoxSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(printBtn)
                        .addGap(0, 210, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(printBtn))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quantityText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(cNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cPhoneText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(logoutBtn)
                            .addComponent(completeBtn)
                            .addComponent(addBtn)))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bTableMouseClicked
        // TODO add your handling code here:
        getSelectedRowIndex();
        prevBook = makeBook();
    }//GEN-LAST:event_bTableMouseClicked

    private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtnActionPerformed
        // TODO add your handling code here:
        if(CurrentUser.getType().equals("Admin")) {
            AdminHomeUI adUI = new AdminHomeUI();
            adUI.setVisible(true);
        }
        else {
            LoginUI loginUI = new LoginUI();
            loginUI.setVisible(true);
        }
        dispose();
    }//GEN-LAST:event_logoutBtnActionPerformed

    private void quantityTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityTextActionPerformed

    private void cNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cNameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cNameTextActionPerformed

    private void cPhoneTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cPhoneTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cPhoneTextActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        
//        System.out.println(getSelectedRowIndex());
        if(getSelectedRowIndex() == -1) {
            JOptionPane.showMessageDialog(this, "Please select a book!");
            return;
        }
        if(quantityText.getText().toString().equals("")) {
            JOptionPane.showMessageDialog(this, "Please select a quantity!");
            return;
        }
        else {
            int quantity = Integer.parseInt(quantityText.getText());
            
            if(prevBook.getCopies() < quantity) {
                JOptionPane.showMessageDialog(this, "Not enough copies!");
                return;
            }
            
            if(billInfo.equals("")) {
                billInfo += "Book\tQuantity\tprice\n"
                        + "-----------------------------------------------";
            }
            
            billInfo += "\n" + prevBook.getbName() + "\t" + quantity + "\t" + quantity * prevBook.getSellingPrice() + "(tk)";
            
            price += quantity * prevBook.getBuyingPrice();
            profit += quantity * (prevBook.getSellingPrice() - prevBook.getBuyingPrice());
            
            billText.setText(billInfo);
            
            prevBook.setCopies(prevBook.getCopies() - quantity);
            ara.add(prevBook);
        }
    }//GEN-LAST:event_addBtnActionPerformed

    private void completeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_completeBtnActionPerformed
        // TODO add your handling code here:
        
        String cName = cNameText.getText().toString();
        String cPhone = cPhoneText.getText().toString();
        
        if(cName.equals("") || cPhone.equals("")) {
            JOptionPane.showMessageDialog(this, "Please provide customer information!");
            return;
        }
        
        if(ara.size() == 0) {
            JOptionPane.showMessageDialog(this, "No book added!");
            return;
        }
        
        billInfo = "Customer Info:\n"
                + "-------------------\n"
                + "Name: " + cName + "\n"
                + "Phone: " + cPhone + "\n\n"
                + billInfo
                + "\n-----------------------------------------------"
                + "\nTotal: " + price + "(tk)";
        
        billText.setText(billInfo);
        
        for(int i = 0; i < ara.size(); i++) {
            op.updateBook(ara.get(i));
        }
        
        finishSale();
        
        billInfo = "";
        price = 0;
        profit = 0;
        ara.clear();
        
        show_all();
        
    }//GEN-LAST:event_completeBtnActionPerformed

    private void printBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printBtnActionPerformed
        try {
            // TODO add your handling code here:
            billText.print();
        } catch (PrinterException ex) {
            Logger.getLogger(SellerPanelUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_printBtnActionPerformed

    private void searchTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTextActionPerformed

    private void searchTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextKeyReleased
        // TODO add your handling code here:

        String search = searchText.getText();
        String searchType = jComboBoxSearch.getSelectedItem().toString();
        if(searchType.equals("Book ID")) {
            searchType = "bID";
        }
        else if(searchType.equals("Name")) {
            searchType = "bName";
        }
        else if(searchType.equals("Author")) {
            searchType = "author";
        }
        else {
            searchType = "category";
        }
        if(search.isEmpty()) {
            show_all();
        }
        else {
            show_all(searchType, search);
        }

    }//GEN-LAST:event_searchTextKeyReleased

    private void jComboBoxSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxSearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SellerPanelUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SellerPanelUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SellerPanelUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SellerPanelUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SellerPanelUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JTable bTable;
    private javax.swing.JTextPane billText;
    private javax.swing.JTextField cNameText;
    private javax.swing.JTextField cPhoneText;
    private javax.swing.JButton completeBtn;
    private javax.swing.JComboBox<String> jComboBoxSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton logoutBtn;
    private javax.swing.JButton printBtn;
    private javax.swing.JTextField quantityText;
    private javax.swing.JTextField searchText;
    // End of variables declaration//GEN-END:variables
}
